"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Gunicorn –¥–ª—è Stimul ICO –Ω–∞ Railway
"""
import os
import multiprocessing

# –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –∞–¥—Ä–µ—Å—É –∏ –ø–æ—Ä—Ç—É
bind = f"0.0.0.0:{os.environ.get('PORT', '8000')}"

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ worker –ø—Ä–æ—Ü–µ—Å—Å–æ–≤  
# –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º 1 –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
workers = int(os.environ.get('GUNICORN_WORKERS', '1'))

# –¢–∏–ø worker'–æ–≤
worker_class = 'sync'

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
worker_connections = 1000

# –¢–∞–π–º–∞—É—Ç –¥–ª—è worker'–æ–≤ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
timeout = 30  # –£–º–µ–Ω—å—à–∞–µ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

# Graceful timeout
graceful_timeout = 10

# Keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
keepalive = 2

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ worker'–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ N –∑–∞–ø—Ä–æ—Å–æ–≤
max_requests = 1000
max_requests_jitter = 100

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
chdir = '/app/backend'

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
accesslog = '-'  # stdout
errorlog = '-'   # stderr
loglevel = 'debug'  # –≤—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ–º debug –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

# Access log format
access_log_format = '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'

# Preload app for better memory usage
# –í–ê–ñ–ù–û: False —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π worker –∑–∞–≥—Ä—É–∂–∞–ª Django –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ
preload_app = False

# Proxy headers - —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –¥–ª—è Railway
forwarded_allow_ips = '*'
proxy_protocol = False
proxy_allow_ips = '*'

# –û—Ç–∫–ª—é—á–∞–µ–º daemon mode —è–≤–Ω–æ
daemon = False

# Bind –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
raw_env = []

# Security headers –¥–ª—è —Ä–∞–±–æ—Ç—ã –∑–∞ Railway proxy
secure_scheme_headers = {
    'X-FORWARDED-PROTOCOL': 'ssl',
    'X-FORWARDED-PROTO': 'https',
    'X-FORWARDED-SSL': 'on'
}

# –û—Ç–∫–ª—é—á–∞–µ–º daemon mode
daemon = False

def on_starting(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"üöÄ Gunicorn –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ {bind}")
    print(f"üë∑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ workers: {workers}")

def when_ready(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã"""
    print("‚úÖ Gunicorn –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã")

def on_exit(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üëã Gunicorn –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É")

def post_worker_init(worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–∂–¥–æ–≥–æ worker'–∞"""
    import sys
    print(f"‚úÖ Worker {worker.pid} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω", file=sys.stderr, flush=True)
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Django, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –≤—Å—ë –û–ö
        import django
        from django.conf import settings
        print(f"‚úÖ Worker {worker.pid}: Django {django.get_version()} –∑–∞–≥—Ä—É–∂–µ–Ω", file=sys.stderr, flush=True)
        print(f"‚úÖ Worker {worker.pid}: DEBUG={settings.DEBUG}", file=sys.stderr, flush=True)
    except Exception as e:
        print(f"‚ùå Worker {worker.pid}: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Django: {e}", file=sys.stderr, flush=True)
        import traceback
        traceback.print_exc(file=sys.stderr)

def worker_int(worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ worker –ø–æ–ª—É—á–∞–µ—Ç SIGINT –∏–ª–∏ SIGQUIT"""
    import sys
    print(f"‚ö†Ô∏è  Worker {worker.pid} –ø–æ–ª—É—á–∏–ª —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è", file=sys.stderr, flush=True)

def worker_abort(worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ worker –ø–æ–ª—É—á–∞–µ—Ç SIGABRT"""
    import sys
    print(f"‚ùå Worker {worker.pid} –∞–≤–∞—Ä–∏–π–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω", file=sys.stderr, flush=True)
    
def worker_exit(server, worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ worker –≤—ã—Ö–æ–¥–∏—Ç"""
    import sys
    print(f"üëã Worker {worker.pid} –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É", file=sys.stderr, flush=True)

